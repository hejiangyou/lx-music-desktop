name: Build

on:
  push:
    branches:
      - master

env:
  IS_CI: 'true'

jobs:
  # CheckCode:
  #   name: Lint Code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out git repository
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Cache file
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           $HOME/.cache/electron
  #           $HOME/.cache/electron-builder
  #           $HOME/.npm/_prebuilds
  #         key: ${{ runner.os }}-build-caches-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-

  #     - name: Install Dependencies
  #       run: |
  #         npm ci

  #     - name: Lint src code
  #       run: npm run lint
  Mac:
    name: Mac
    runs-on: macos-latest
    # needs: CheckCode
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Install python3 setuptools
        run: brew install python-setuptools

      - name: Get npm cache directory
        shell: bash
        run: echo "NPM_CACHE=$(npm config get cache)" >> $GITHUB_ENV

      - name: Show Env
        run: echo "${{ env.NPM_CACHE }}"
      - name: Setup Node Env
        env:
          NPM_CACHE: ${{ env.NPM_CACHE }}
        uses: ./.github/actions/setup

      - name: Build src code
        run: |
          git status --porcelain
          npm run build

      - name: Release package
        run: |
          npm run publish:mac:dmg
          npm run publish:mac:dmg:arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BT_TOKEN: ${{ secrets.BT_TOKEN }}

      - name: Generate file MD5
        run: |
          cd build
          md5 *.dmg
